# This is a basic workflow to help you get started with Actions

name: DwarfAndBlade Build

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ CI-release-branch ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]
        include:
          - os: windows-latest
            vcpkg-response-file: vcpkg_x64-windows.txt
          - os: ubuntu-latest
            vcpkg-response-file: vcpkg_x64-linux.txt

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'

    # Cache/Restore the vcpkg's build artifacts.
    - name: Cache vcpkg's artifacts
      uses: actions/cache@v1
      with:
        path: ${{ github.workspace }}/include/vcpkg/
        # The key will be different each time a different version of vcpkg is used, or different ports are installed.
        key: ${{ hashFiles( env.vcpkgResponseFile ) }}-${{ hashFiles('.git/modules/vcpkg/HEAD') }}-${{ runner.os }}

    # Download, build vcpkg, install requested ports. If content is restored by the previous step,
    # it is a no-op. 
    - name: Run vcpkg
      uses: lukka/run-vcpkg@v1
      id: runvcpkg
      with:
       # Response file stored in source control, it provides the list of ports and triplet(s).
        vcpkgArguments: '@${{ env.vcpkgResponseFile }}'
       # Location of the vcpkg as submodule of the repository.
        vcpkgDirectory: '${{ github.workspace }}/include/vcpkg'
